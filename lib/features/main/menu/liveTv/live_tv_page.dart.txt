import 'package:dhakalive/screens/main/menu/liveTv/live_tv_controller.dart';
import 'package:dhakalive/widgets/chennal_card.dart';
import 'package:dhakalive/widgets/shimmer_effect.dart';
import 'package:flutter/material.dart';
import 'package:flutter_staggered_grid_view/flutter_staggered_grid_view.dart';
import 'package:get/get.dart';
import 'package:shimmer/shimmer.dart';

class LiveTvPage extends StatelessWidget {
  LiveTvPage({Key? key}) : super(key: key);

  final controller = Get.put(LiveTvPageController());

  Future<void> onRefresh() async {
    controller.getTVSData();
  }

  @override
  Widget build(BuildContext context) {
    final textTheme = Theme.of(context)
        .textTheme
        .apply(displayColor: Theme.of(context).colorScheme.onSurface);

    return Scaffold(
        body: controller.obx((state) {
      return RefreshIndicator(
        onRefresh: onRefresh,
        child: SingleChildScrollView(
          child: Padding(
            padding: const EdgeInsets.all(8.0),
            child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: <Widget>[
                  const SizedBox(
                    height: 8,
                  ),
                  Text(
                    state![0].name.toString(),
                    style: textTheme.headline6,
                  ),
                  const SizedBox(
                    height: 8,
                  ),
                  Container(
                      child: GridView.custom(
                    physics: const NeverScrollableScrollPhysics(),
                    shrinkWrap: true,
                    gridDelegate: SliverQuiltedGridDelegate(
                      crossAxisCount: 4,
                      mainAxisSpacing: 4,
                      crossAxisSpacing: 4,
                      repeatPattern: QuiltedGridRepeatPattern.same,
                      pattern: [
                        const QuiltedGridTile(1, 4),
                        const QuiltedGridTile(1, 2),
                        const QuiltedGridTile(1, 2),
                      ],
                    ),
                    childrenDelegate: SliverChildBuilderDelegate(
                      (context, index) => ChennalCard(
                        img: state[0].tvs![index].thumbanil.toString(),
                      ),
                      childCount: state[0].tvs!.length,
                    ),
                  )),
                  const SizedBox(
                    height: 8,
                  ),
                  Text(
                    state[1].name.toString(),
                    style: textTheme.headline6,
                  ),
                  const SizedBox(
                    height: 8,
                  ),
                  Container(
                      child: GridView.custom(
                    physics: const NeverScrollableScrollPhysics(),
                    shrinkWrap: true,
                    gridDelegate: SliverQuiltedGridDelegate(
                      crossAxisCount: 4,
                      mainAxisSpacing: 4,
                      crossAxisSpacing: 4,
                      repeatPattern: QuiltedGridRepeatPattern.same,
                      pattern: state[1].tvs!.length % 2 == 0
                          ? [
                              QuiltedGridTile(1, 2),
                              QuiltedGridTile(1, 2),
                            ]
                          : [
                              QuiltedGridTile(1, 4),
                              QuiltedGridTile(1, 2),
                              QuiltedGridTile(1, 2),
                            ],
                    ),
                    childrenDelegate: SliverChildBuilderDelegate(
                        (context, index) => Column(
                              children: [
                                ChennalCard(
                                  img: state[1].tvs![index].thumbanil,
                                ),
                              ],
                            ),
                        childCount: state[1].tvs!.length),
                  )),
                  SizedBox(
                    height: 8,
                  )
                ]),
          ),
        ),
      );
    },
            onLoading: Container(
                child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                SizedBox(
                  height: 8,
                ),
                Shimmer.fromColors(
                    child: Padding(
                      padding: const EdgeInsets.all(2.0),
                      child: InkWell(
                        onTap: () {
                          onRefresh();
                        },
                        child: Container(
                          height: 40,
                          width: 200,
                          decoration: BoxDecoration(
                              color: Colors.white,
                              borderRadius: BorderRadius.circular(16)),
                        ),
                      ),
                    ),
                    baseColor: Colors.grey[400]!,
                    highlightColor: Colors.grey[100]!),
                SizedBox(
                  height: 8,
                ),
                GridView.custom(
                  physics: const NeverScrollableScrollPhysics(),
                  shrinkWrap: true,
                  gridDelegate: SliverQuiltedGridDelegate(
                    crossAxisCount: 4,
                    mainAxisSpacing: 4,
                    crossAxisSpacing: 4,
                    repeatPattern: QuiltedGridRepeatPattern.same,
                    pattern: [
                      QuiltedGridTile(1, 4),
                      QuiltedGridTile(1, 2),
                      QuiltedGridTile(1, 2),
                    ],
                  ),
                  childrenDelegate: SliverChildBuilderDelegate(
                      (context, index) => ShimmerImage(),
                      childCount: 7),
                ),
              ],
            )),
            onError: (messege) => Text("Error $messege")));
  }
}



